☐ implement all color formants and test them
  ☐ support `transparent`
  ✔ rgb (rgb, rgba, numbers/percentages, with/without spaces, with/without commas etc.)
    ✔ rgb
    ✔ rgba
      ✔ `rgba(51 170 51 / 0.4)`
      ✔ `rgba(1e2, .5e1, .5e0, +.25e2%)`
    ✔ numbers
      ✔ 0-255
    ✔ percentages
      ✔ 0%-100%
    ✔ with spaces
    ✔ without spaces
    ✔ with commas
    ✔ without commas
    ✔ scientific notation
    ✔ edge cases:
      ✔ hella spaces
      ✔ multiple commas
      ✔ nonsensical characters
      ✔ too many inputs?
    ✔ comments
  ✔ hsl (hsl, hsla, all possible syntaxes)
    ✔ input
      ✔ percent
      ✔ deg
      ✔ scientific
      ✔ Hue units
        ✔ deg
        ✔ grad
        ✔ rad
        ✔ turn
    ✔ output
    ✔ tests
    ✔ change conversion input/output units
    ✔ fix rounding
    ✔ A few more tests should be added
      ✔ All color parts using the same unit
      ✔ Negative exponents
      ✔ malformed input
☐ Utils
  ☐ document units
  ✔ move hsl-rgb conversion functions to the HSL class
☐ make units types? (for documentation purposes, might clarify some things)
☐ implement more methods
  ✔ get
    ✔ red
      ✔ test
    ✔ green
      ✔ test
    ✔ blue
      ✔ test
    ✔ alpha
      ✔ opacity (alias)
      ✔ test
    ✔ hue
      ✔ test
    ✔ lightness
      ✔ test
      ✔ should this round? I decided yes, to 10 digits
    ✔ saturation
      ✔ test
      ✔ rounding? yes
    ✔ rounding should be configurable
  ☐ create
    ✔ hsl
    ✔ hsla
    ☐ rgb
    ☐ rgba
  ☐ edit (popular)
    ✔ opacify
      ☐ fade-in (alias)
    ✔ darken
    ✔ desaturate
    ✔ lighten
    ✔ saturate
    ✔ transparentize
      ☐ fade-out (alias)
  ☐ edit (niche)
    ✔ adjust-colors
    ☐ adjust-hue
    ☐ change-color
    ☐ complement
    ☐ grayscale
    ☐ invert
    ☐ scale-color
  ☐ others
    ☐ mix
☐ set up style guide with ESLint